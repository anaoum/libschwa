#!/usr/bin/python
from __future__ import print_function, unicode_literals
import os
import subprocess


def run(*cmd):
  return subprocess.check_output(cmd).decode('utf-8').strip()


def install(src, dest, cache, executable=False):
  dirname = os.path.dirname(dest)
  if dirname not in cache:
    run('echo', 'install', '-d', '-v', dirname)
    cache.add(dirname)
  cmd = ['echo', 'install', '-p', '-v'] + ([] if executable else ['-m', '0644']) + [src, dest]
  run(*cmd)


def main():
  # Where are we meant to be installing to?
  destdir = run('make', '--no-print-directory', 'echo-DESTDIR').split('=', 1)[1]

  # What are we meant to be installing?
  binaries = run('make', '--no-print-directory', 'echo-APPS').split('=', 1)[1].split()
  headers = run('find', 'src/lib', '-type', 'f', '-name', '*.h').split('\n')
  libraries = run('make', '--no-print-directory', 'echo-LIBSCHWA_LIBS').split('=', 1)[1].split()

  cache = set()

  # Install the header files.
  for src in headers:
    dest = src.split(os.path.sep)
    del dest[0:2]
    dest = os.path.join(destdir, 'include', *dest)
    install(src, dest, cache)

  # Install the shared libraries.
  for src in libraries:
    dest = os.path.join(destdir, src)
    install(src, dest, cache)

  # Install the binaries.
  for src in binaries:
    dest = os.path.join(destdir, src)
    install(src, dest, cache, executable=True)


if __name__ == '__main__':
  main()
